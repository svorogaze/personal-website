services:
  frontend:
    build: /frontend/
    ports:
      - "3000:3000"
    expose:
      - "8088"
    depends_on:
      db:
        condition: service_healthy
  backend:
    build: /backend/
    ports:
      - "8088:8088"
    env_file: ".env"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17.5-alpine3.22
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB}  -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 50s
      retries: 10
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB:       ${POSTGRES_DB}
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
  nginx:
    image: nginx:alpine3.22
    depends_on:
      - "frontend"
      - "backend"
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
volumes:
  pgdata:
    